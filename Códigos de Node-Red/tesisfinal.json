[
    {
        "id": "876115222c45be98",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b849e65dde533a15",
        "type": "mqtt in",
        "z": "876115222c45be98",
        "name": "",
        "topic": "dron/MQ-8",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "32afe530520bad1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 100,
        "wires": [
            [
                "1fcb36f84c5e3fbc",
                "01179edd1c6d6a4a",
                "fb51a9d38e0da363"
            ]
        ]
    },
    {
        "id": "fb51a9d38e0da363",
        "type": "ui_chart",
        "z": "876115222c45be98",
        "name": "",
        "group": "8742704274f8d7d2",
        "order": 5,
        "width": 0,
        "height": 0,
        "label": "",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 450,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "76c2a9a6b9a22790",
        "type": "mqtt in",
        "z": "876115222c45be98",
        "name": "",
        "topic": "dron/MG-811",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "32afe530520bad1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 160,
        "wires": [
            [
                "d76ec21e7217fd22",
                "eb3f80faaf9dc488",
                "c7433a279a66a408"
            ]
        ]
    },
    {
        "id": "d76ec21e7217fd22",
        "type": "ui_chart",
        "z": "876115222c45be98",
        "name": "",
        "group": "8742704274f8d7d2",
        "order": 6,
        "width": 0,
        "height": 0,
        "label": "mg811",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 450,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "f453f0e2125f7ef7",
        "type": "mqtt in",
        "z": "876115222c45be98",
        "name": "",
        "topic": "dron/MQ-135",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "32afe530520bad1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "65ac2f1affaed0d1",
                "2ccea0139c479199"
            ]
        ]
    },
    {
        "id": "65ac2f1affaed0d1",
        "type": "ui_chart",
        "z": "876115222c45be98",
        "name": "",
        "group": "8742704274f8d7d2",
        "order": 7,
        "width": 0,
        "height": 0,
        "label": "mq135",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 450,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "87fe48dd34d9e123",
        "type": "mqtt in",
        "z": "876115222c45be98",
        "name": "",
        "topic": "dron/MQ7",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "32afe530520bad1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 240,
        "wires": [
            [
                "5763ce44765ff012",
                "cd7ef6b319ce383e"
            ]
        ]
    },
    {
        "id": "5763ce44765ff012",
        "type": "ui_chart",
        "z": "876115222c45be98",
        "name": "",
        "group": "8742704274f8d7d2",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "mq7",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 450,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "03eef268acae1822",
        "type": "mqtt in",
        "z": "876115222c45be98",
        "name": "",
        "topic": "dron/SDS25",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "32afe530520bad1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 280,
        "wires": [
            [
                "302f4d52b6e66183",
                "a6fdd3bfdede8fdb"
            ]
        ]
    },
    {
        "id": "302f4d52b6e66183",
        "type": "ui_chart",
        "z": "876115222c45be98",
        "name": "",
        "group": "8742704274f8d7d2",
        "order": 9,
        "width": 0,
        "height": 0,
        "label": "sds25",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 450,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "c1049100000099f6",
        "type": "mqtt in",
        "z": "876115222c45be98",
        "name": "",
        "topic": "dron/SDS10",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "32afe530520bad1f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 210,
        "y": 320,
        "wires": [
            [
                "fbc96e66ed899218",
                "64ad0757e3b7a6d1"
            ]
        ]
    },
    {
        "id": "fbc96e66ed899218",
        "type": "ui_chart",
        "z": "876115222c45be98",
        "name": "",
        "group": "8742704274f8d7d2",
        "order": 10,
        "width": 0,
        "height": 0,
        "label": "sds10",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 450,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1fcb36f84c5e3fbc",
        "type": "ui_text",
        "z": "876115222c45be98",
        "group": "8742704274f8d7d2",
        "order": 11,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "mq8",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 470,
        "y": 40,
        "wires": []
    },
    {
        "id": "eb3f80faaf9dc488",
        "type": "ui_text",
        "z": "876115222c45be98",
        "group": "8742704274f8d7d2",
        "order": 12,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "mg811",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 160,
        "wires": []
    },
    {
        "id": "2ccea0139c479199",
        "type": "ui_text",
        "z": "876115222c45be98",
        "group": "8742704274f8d7d2",
        "order": 13,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "mq135",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "cd7ef6b319ce383e",
        "type": "ui_text",
        "z": "876115222c45be98",
        "group": "8742704274f8d7d2",
        "order": 14,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "mq7",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "a6fdd3bfdede8fdb",
        "type": "ui_text",
        "z": "876115222c45be98",
        "group": "8742704274f8d7d2",
        "order": 15,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "sds25",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "64ad0757e3b7a6d1",
        "type": "ui_text",
        "z": "876115222c45be98",
        "group": "8742704274f8d7d2",
        "order": 16,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "sds10",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 570,
        "y": 320,
        "wires": []
    },
    {
        "id": "58653f266de8ccb1",
        "type": "ui_switch",
        "z": "876115222c45be98",
        "name": "",
        "label": "ENCENDIDO//APAGADO",
        "tooltip": "",
        "group": "8742704274f8d7d2",
        "order": 1,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "i",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "j",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 110,
        "y": 380,
        "wires": [
            [
                "7757821a415833c6"
            ]
        ]
    },
    {
        "id": "51a17f90588999b0",
        "type": "ui_switch",
        "z": "876115222c45be98",
        "name": "",
        "label": "DERECHA/IZQUIERDA",
        "tooltip": "",
        "group": "8742704274f8d7d2",
        "order": 2,
        "width": 6,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "a",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "b",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 110,
        "y": 420,
        "wires": [
            [
                "259d041c2bb23b8c"
            ]
        ]
    },
    {
        "id": "061cee944d40a6a0",
        "type": "ui_numeric",
        "z": "876115222c45be98",
        "name": "",
        "label": "METROS",
        "tooltip": "",
        "group": "8742704274f8d7d2",
        "order": 3,
        "width": 6,
        "height": 1,
        "wrap": false,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "format": "{{value}}",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "x": 60,
        "y": 460,
        "wires": [
            [
                "27309eac5e57eb19"
            ]
        ]
    },
    {
        "id": "7757821a415833c6",
        "type": "mqtt out",
        "z": "876115222c45be98",
        "name": "",
        "topic": "servo/estado",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "32afe530520bad1f",
        "x": 270,
        "y": 380,
        "wires": []
    },
    {
        "id": "259d041c2bb23b8c",
        "type": "mqtt out",
        "z": "876115222c45be98",
        "name": "",
        "topic": "servo/direccion",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "32afe530520bad1f",
        "x": 280,
        "y": 420,
        "wires": []
    },
    {
        "id": "27309eac5e57eb19",
        "type": "mqtt out",
        "z": "876115222c45be98",
        "name": "",
        "topic": "servo/metros",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "32afe530520bad1f",
        "x": 270,
        "y": 460,
        "wires": []
    },
    {
        "id": "88d80862605175d0",
        "type": "inject",
        "z": "876115222c45be98",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "4",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "SELECT * FROM sensores;",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 760,
        "wires": [
            [
                "0f721f771d12301a"
            ]
        ]
    },
    {
        "id": "cc6af8770443e6e1",
        "type": "mqtt in",
        "z": "876115222c45be98",
        "name": "",
        "topic": "test",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "6285cced421ecc89",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 640,
        "wires": [
            [
                "9a48847e7296c357"
            ]
        ]
    },
    {
        "id": "f53a8252fca2ab33",
        "type": "debug",
        "z": "876115222c45be98",
        "name": "debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 640,
        "wires": []
    },
    {
        "id": "9a48847e7296c357",
        "type": "json",
        "z": "876115222c45be98",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 370,
        "y": 640,
        "wires": [
            [
                "5e1de1379cca6ec2",
                "8809ac75783e9a93"
            ]
        ]
    },
    {
        "id": "0f721f771d12301a",
        "type": "function",
        "z": "876115222c45be98",
        "name": "function 5",
        "func": "\nmsg.topic = \"SELECT MAX(id) AS ultimo_id FROM vuelos\";\n// Devuelve el mensaje para enviarlo al nodo MySQL\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 760,
        "wires": [
            [
                "d0009f701ce81662"
            ]
        ]
    },
    {
        "id": "256f58fe92cdfbbf",
        "type": "mysql",
        "z": "876115222c45be98",
        "mydb": "ad491c1475ab68ec",
        "name": "",
        "x": 710,
        "y": 640,
        "wires": [
            [
                "f53a8252fca2ab33"
            ]
        ]
    },
    {
        "id": "8809ac75783e9a93",
        "type": "debug",
        "z": "876115222c45be98",
        "name": "entrada",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 580,
        "wires": []
    },
    {
        "id": "d0009f701ce81662",
        "type": "mysql",
        "z": "876115222c45be98",
        "mydb": "ad491c1475ab68ec",
        "name": "",
        "x": 470,
        "y": 760,
        "wires": [
            [
                "20a212223e5164ec"
            ]
        ]
    },
    {
        "id": "20a212223e5164ec",
        "type": "function",
        "z": "876115222c45be98",
        "name": "Convertir a entero",
        "func": "// Verificar si msg.payload es un array con al menos un elemento\nif (Array.isArray(msg.payload) && msg.payload.length > 0) {\n    // Obtener el valor de ultimo_id del primer elemento del array\n    var ultimo_id = msg.payload[0].ultimo_id;\n\n    // Convertir a entero si es posible\n    if (!isNaN(ultimo_id)) {\n        msg.payload = parseInt(ultimo_id);\n    } else {\n        // Manejar el caso en el que ultimo_id no sea un número válido\n        node.warn(\"El valor de ultimo_id no es un número válido.\");\n        // Puedes asignar un valor por defecto o manejar el error según sea necesario\n        msg.payload = 0; // Asignar un valor por defecto o manejar el error según sea necesario\n    }\n} else {\n    // Manejar el caso en el que msg.payload no sea un array válido\n    node.warn(\"El mensaje recibido no tiene el formato esperado.\");\n    // Puedes asignar un valor por defecto o manejar el error según sea necesario\n    msg.payload = 0; // Asignar un valor por defecto o manejar el error según sea necesario\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 760,
        "wires": [
            [
                "edc5820bd9cf71ba",
                "19a8f6e9c74ada5b"
            ]
        ]
    },
    {
        "id": "edc5820bd9cf71ba",
        "type": "debug",
        "z": "876115222c45be98",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 760,
        "wires": []
    },
    {
        "id": "5e1de1379cca6ec2",
        "type": "function",
        "z": "876115222c45be98",
        "name": "function 6",
        "func": "// JSON recibido en el mensaje\nvar payload = msg.payload;\n\n// Construcción de la consulta SQL\nvar query = \"INSERT INTO sensores (idVuelos, fecha, dispositivo, mq8, mg811, mq135, mq7, sds25, sds10) VALUES ('\";\nquery += payload.idvuel + \"','\";\nquery += new Date().toISOString().slice(0, 19).replace('T', ' ') + \"','\"; // Fecha y hora actual en formato adecuado\nquery += payload.DEVICE + \"','\";\nquery += payload.mq8 + \"','\";\nquery += payload.mg811 + \"','\";\nquery += payload.mq135 + \"','\";\nquery += payload.mq7 + \"','\";\nquery += payload.sds25 + \"','\";\n// Eliminar caracteres especiales como \\r\\n de sds10\nquery += payload.sds10.replace(/[\\r\\n]+/g, '') + \"')\";\n\n// Asignar la consulta SQL al campo 'topic' del mensaje\nmsg.topic = query;\n\n// Retornar el mensaje con la consulta SQL\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 640,
        "wires": [
            [
                "256f58fe92cdfbbf",
                "5defcc2b9e1ddc0c"
            ]
        ]
    },
    {
        "id": "19a8f6e9c74ada5b",
        "type": "mqtt out",
        "z": "876115222c45be98",
        "name": "",
        "topic": "idvuelos",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "32afe530520bad1f",
        "x": 820,
        "y": 840,
        "wires": []
    },
    {
        "id": "01179edd1c6d6a4a",
        "type": "debug",
        "z": "876115222c45be98",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 40,
        "wires": []
    },
    {
        "id": "771a4561c42745ba",
        "type": "function",
        "z": "876115222c45be98",
        "name": "function 8",
        "func": "// Obtenemos el mensaje de entrada (objeto JavaScript)\nvar datos = msg.payload;\n\ntry {\n    // Accede a cada variable según su nombre de campo en el objeto\n    var DEVICE = datos.DEVICE;\n    var idvuel = datos.idvuel;\n    var mq8 = parseFloat(datos.mq8);\n    var mg811 = parseFloat(datos.mg811);\n    var mq135 = parseFloat(datos.mq135);\n    var mq7 = parseFloat(datos.mq7);\n    var sds25 = parseFloat(datos.sds25);\n    var sds10 = parseFloat(datos.sds10);\n\n    // Puedes hacer cualquier operación adicional aquí con las variables\n\n    // Preparar el mensaje de salida\n    msg.payload = {\n        DEVICE: DEVICE,\n        idvuel: idvuel,\n        mq8: mq8,\n        mg811: mg811,\n        mq135: mq135,\n        mq7: mq7,\n        sds25: sds25,\n        sds10: sds10\n    };\n\n    return msg;\n} catch (error) {\n    node.error(\"Error al procesar el mensaje JSON: \" + error.message);\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "22a8a5da6a076423",
        "type": "debug",
        "z": "876115222c45be98",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 480,
        "wires": []
    },
    {
        "id": "5defcc2b9e1ddc0c",
        "type": "function",
        "z": "876115222c45be98",
        "name": "function 9",
        "func": "// Función para extraer DEVICE\nfunction extractDEVICE(msg) {\n    var datos = msg.payload;\n    msg.device = datos.DEVICE;\n    return msg;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 440,
        "wires": [
            [
                "22a8a5da6a076423"
            ]
        ]
    },
    {
        "id": "97b7abfec49a2c4f",
        "type": "debug",
        "z": "876115222c45be98",
        "name": "debug 3",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 80,
        "wires": []
    },
    {
        "id": "c7433a279a66a408",
        "type": "debug",
        "z": "876115222c45be98",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 200,
        "wires": []
    },
    {
        "id": "6f99a37f138b587b",
        "type": "function",
        "z": "876115222c45be98",
        "name": "function 10",
        "func": "// Configura la cantidad de valores para el promedio móvil\nvar cantidadValores = 10;  // Ajusta según la cantidad de valores que deseas promediar\n\n// Inicializa un arreglo para almacenar los últimos valores recibidos\ncontext.valores = context.valores || [];\n\n// Agrega el nuevo valor al final del arreglo\ncontext.valores.push(msg.payload);\n\n// Limita el arreglo a la cantidad de valores deseada\nif (context.valores.length > cantidadValores) {\n    context.valores.shift(); // Elimina el primer valor (el más antiguo)\n}\n\n// Calcula el promedio de los valores actuales\nvar sum = context.valores.reduce((a, b) => a + b, 0);\nvar promedio = sum / context.valores.length;\n\n// Crea el mensaje de salida con el promedio calculado\nmsg.payload = promedio;\n\n// Devuelve el mensaje para pasarlo al siguiente nodo\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 80,
        "wires": [
            [
                "97b7abfec49a2c4f"
            ]
        ]
    },
    {
        "id": "3c9d18ef1b1889b4",
        "type": "ui_spacer",
        "z": "876115222c45be98",
        "name": "spacer",
        "group": "8742704274f8d7d2",
        "order": 4,
        "width": 18,
        "height": 1
    },
    {
        "id": "32afe530520bad1f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "3.128.194.242",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "8742704274f8d7d2",
        "type": "ui_group",
        "name": "CONTROL DE SERVO",
        "tab": "78955fc7d2a925b4",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "6285cced421ecc89",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "ad491c1475ab68ec",
        "type": "MySQLdatabase",
        "name": "",
        "host": "localhost",
        "port": "3306",
        "db": "dron",
        "tz": "",
        "charset": "UTF8"
    },
    {
        "id": "78955fc7d2a925b4",
        "type": "ui_tab",
        "name": "tesis",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    }
]